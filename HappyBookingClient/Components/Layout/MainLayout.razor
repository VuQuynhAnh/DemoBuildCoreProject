@using Blazored.LocalStorage
@using HappyBookingShare.Common
@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorage

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <MudAvatar onclick="@(() => HandleClick())" Class="cursorPointer">
                <MudImage Src="@avatarUrl"></MudImage>
            </MudAvatar>
            <MudPaper Width="250px" Class="d-inline-flex py-3" Elevation="0">
                <MudNavMenu Class="mud-width-full">
                    <MudText Typo="Typo.h6" Class="px-4">Material</MudText>
                    <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Icons</MudText>
                    <MudDivider Class="my-2" />
                    <MudNavLink Href="/dashboard" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
                    <MudNavLink Href="/servers" Icon="@Icons.Material.Filled.Storage">Servers</MudNavLink>
                    <MudNavLink Href="/billing" Icon="@Icons.Material.Filled.Receipt" Disabled="true">Billing</MudNavLink>
                </MudNavMenu>
            </MudPaper>
        </div>

        <article class="content px-4">
            @Body
            <MudThemeProvider />
            <MudDialogProvider />
            <MudSnackbarProvider />
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private string avatarUrl = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var url = await LocalStorage.GetItemAsync<string>(KeyConstant.AvatarUrl);
        avatarUrl = !string.IsNullOrEmpty(url) ? url : KeyConstant.DefaultAvata;
        StateHasChanged();
    }

    public void HandleClick()
    {

        // call ToggleMenu or any other method
    }
}
