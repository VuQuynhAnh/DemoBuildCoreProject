@using Blazored.LocalStorage
@using HappyBookingShare.Common
@using HappyBookingShare.Response.Dtos
@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorage

<style>
    .styleMudPaper {
        width: 230px;
        position: absolute;
        top: 55px;
        right: 10px;
        background: #d9ffea;
        border: 1px solid #05fa73;
    }

        .styleMudPaper a {
            text-decoration: none;
        }

    a:hover, a:visited, a:link, a:active {
        color: #000;
        text-decoration: none !important;
    }
</style>
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <MudAvatar onclick="@(() => HandleClick())" Class="cursorPointer">
                <MudImage Src="@avatarUrl"></MudImage>
            </MudAvatar>
            @if (showMudPaper)
            {
                <MudPaper Class="d-inline-flex styleMudPaper" Elevation="0">
                    <MudNavMenu Class="mud-width-full" Rounded="true" Margin="Margin.Dense" Color="Color.Primary">
                        <MudText Typo="Typo.h6" Class="px-4">@userLogin.FullName</MudText>
                        <MudDivider Class="my-2" />
                        <MudNavLink Href="/dashboard" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
                        <MudNavLink Href="/servers" Icon="@Icons.Material.Filled.Storage">Servers</MudNavLink>
                        <MudNavLink Href="/billing" Icon="@Icons.Material.Filled.Receipt">Billing</MudNavLink>
                    </MudNavMenu>
                </MudPaper>
            }
        </div>

        <article class="content px-4">
            @Body
            <MudThemeProvider />
            <MudDialogProvider />
            <MudSnackbarProvider />
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private string avatarUrl = string.Empty;
    private UserDto userLogin = new();
    private bool showMudPaper = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        userLogin = await LocalStorage.GetItemAsync<UserDto>(KeyConstant.UserLogin) ?? new();
        avatarUrl = !string.IsNullOrEmpty(userLogin.AvatarImage) ? userLogin.AvatarImage : KeyConstant.DefaultAvata;
        StateHasChanged();
    }

    public void HandleClick()
    {
        showMudPaper = !showMudPaper;
    }
}
